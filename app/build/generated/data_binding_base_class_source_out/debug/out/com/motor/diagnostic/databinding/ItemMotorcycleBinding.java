// Generated by view binder compiler. Do not edit!
package com.motor.diagnostic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.motor.diagnostic.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMotorcycleBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final View connectionStatusIndicator;

  @NonNull
  public final ImageView ivMotorcycle;

  @NonNull
  public final TextView tvMotorcycleModel;

  @NonNull
  public final TextView tvMotorcycleName;

  @NonNull
  public final TextView tvMotorcycleYear;

  private ItemMotorcycleBinding(@NonNull MaterialCardView rootView,
      @NonNull View connectionStatusIndicator, @NonNull ImageView ivMotorcycle,
      @NonNull TextView tvMotorcycleModel, @NonNull TextView tvMotorcycleName,
      @NonNull TextView tvMotorcycleYear) {
    this.rootView = rootView;
    this.connectionStatusIndicator = connectionStatusIndicator;
    this.ivMotorcycle = ivMotorcycle;
    this.tvMotorcycleModel = tvMotorcycleModel;
    this.tvMotorcycleName = tvMotorcycleName;
    this.tvMotorcycleYear = tvMotorcycleYear;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMotorcycleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMotorcycleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_motorcycle, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMotorcycleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.connection_status_indicator;
      View connectionStatusIndicator = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatusIndicator == null) {
        break missingId;
      }

      id = R.id.iv_motorcycle;
      ImageView ivMotorcycle = ViewBindings.findChildViewById(rootView, id);
      if (ivMotorcycle == null) {
        break missingId;
      }

      id = R.id.tv_motorcycle_model;
      TextView tvMotorcycleModel = ViewBindings.findChildViewById(rootView, id);
      if (tvMotorcycleModel == null) {
        break missingId;
      }

      id = R.id.tv_motorcycle_name;
      TextView tvMotorcycleName = ViewBindings.findChildViewById(rootView, id);
      if (tvMotorcycleName == null) {
        break missingId;
      }

      id = R.id.tv_motorcycle_year;
      TextView tvMotorcycleYear = ViewBindings.findChildViewById(rootView, id);
      if (tvMotorcycleYear == null) {
        break missingId;
      }

      return new ItemMotorcycleBinding((MaterialCardView) rootView, connectionStatusIndicator,
          ivMotorcycle, tvMotorcycleModel, tvMotorcycleName, tvMotorcycleYear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
