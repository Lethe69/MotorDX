// Generated by view binder compiler. Do not edit!
package com.motor.diagnostic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.motor.diagnostic.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDiagnosticDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final CardView cardDetails;

  @NonNull
  public final CardView cardRecommendations;

  @NonNull
  public final CardView cardStatus;

  @NonNull
  public final ConstraintLayout contentContainer;

  @NonNull
  public final ConstraintLayout headerContainer;

  @NonNull
  public final ImageView ivDiagnosticIcon;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView tvDetailsTitle;

  @NonNull
  public final TextView tvDiagnosticTitle;

  @NonNull
  public final TextView tvLastUpdated;

  @NonNull
  public final TextView tvParam1Label;

  @NonNull
  public final TextView tvParam1Value;

  @NonNull
  public final TextView tvParam2Label;

  @NonNull
  public final TextView tvParam2Value;

  @NonNull
  public final TextView tvParam3Label;

  @NonNull
  public final TextView tvParam3Value;

  @NonNull
  public final TextView tvRecommendationsContent;

  @NonNull
  public final TextView tvRecommendationsTitle;

  @NonNull
  public final TextView tvStatusDescription;

  @NonNull
  public final TextView tvStatusTitle;

  @NonNull
  public final TextView tvStatusValue;

  @NonNull
  public final TextView tvTitle;

  private FragmentDiagnosticDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton btnBack, @NonNull CardView cardDetails,
      @NonNull CardView cardRecommendations, @NonNull CardView cardStatus,
      @NonNull ConstraintLayout contentContainer, @NonNull ConstraintLayout headerContainer,
      @NonNull ImageView ivDiagnosticIcon, @NonNull ProgressBar progressBar,
      @NonNull TextView tvDetailsTitle, @NonNull TextView tvDiagnosticTitle,
      @NonNull TextView tvLastUpdated, @NonNull TextView tvParam1Label,
      @NonNull TextView tvParam1Value, @NonNull TextView tvParam2Label,
      @NonNull TextView tvParam2Value, @NonNull TextView tvParam3Label,
      @NonNull TextView tvParam3Value, @NonNull TextView tvRecommendationsContent,
      @NonNull TextView tvRecommendationsTitle, @NonNull TextView tvStatusDescription,
      @NonNull TextView tvStatusTitle, @NonNull TextView tvStatusValue, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.cardDetails = cardDetails;
    this.cardRecommendations = cardRecommendations;
    this.cardStatus = cardStatus;
    this.contentContainer = contentContainer;
    this.headerContainer = headerContainer;
    this.ivDiagnosticIcon = ivDiagnosticIcon;
    this.progressBar = progressBar;
    this.tvDetailsTitle = tvDetailsTitle;
    this.tvDiagnosticTitle = tvDiagnosticTitle;
    this.tvLastUpdated = tvLastUpdated;
    this.tvParam1Label = tvParam1Label;
    this.tvParam1Value = tvParam1Value;
    this.tvParam2Label = tvParam2Label;
    this.tvParam2Value = tvParam2Value;
    this.tvParam3Label = tvParam3Label;
    this.tvParam3Value = tvParam3Value;
    this.tvRecommendationsContent = tvRecommendationsContent;
    this.tvRecommendationsTitle = tvRecommendationsTitle;
    this.tvStatusDescription = tvStatusDescription;
    this.tvStatusTitle = tvStatusTitle;
    this.tvStatusValue = tvStatusValue;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDiagnosticDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDiagnosticDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_diagnostic_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDiagnosticDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.cardDetails;
      CardView cardDetails = ViewBindings.findChildViewById(rootView, id);
      if (cardDetails == null) {
        break missingId;
      }

      id = R.id.cardRecommendations;
      CardView cardRecommendations = ViewBindings.findChildViewById(rootView, id);
      if (cardRecommendations == null) {
        break missingId;
      }

      id = R.id.cardStatus;
      CardView cardStatus = ViewBindings.findChildViewById(rootView, id);
      if (cardStatus == null) {
        break missingId;
      }

      id = R.id.contentContainer;
      ConstraintLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      id = R.id.headerContainer;
      ConstraintLayout headerContainer = ViewBindings.findChildViewById(rootView, id);
      if (headerContainer == null) {
        break missingId;
      }

      id = R.id.ivDiagnosticIcon;
      ImageView ivDiagnosticIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivDiagnosticIcon == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tvDetailsTitle;
      TextView tvDetailsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailsTitle == null) {
        break missingId;
      }

      id = R.id.tvDiagnosticTitle;
      TextView tvDiagnosticTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvDiagnosticTitle == null) {
        break missingId;
      }

      id = R.id.tvLastUpdated;
      TextView tvLastUpdated = ViewBindings.findChildViewById(rootView, id);
      if (tvLastUpdated == null) {
        break missingId;
      }

      id = R.id.tvParam1Label;
      TextView tvParam1Label = ViewBindings.findChildViewById(rootView, id);
      if (tvParam1Label == null) {
        break missingId;
      }

      id = R.id.tvParam1Value;
      TextView tvParam1Value = ViewBindings.findChildViewById(rootView, id);
      if (tvParam1Value == null) {
        break missingId;
      }

      id = R.id.tvParam2Label;
      TextView tvParam2Label = ViewBindings.findChildViewById(rootView, id);
      if (tvParam2Label == null) {
        break missingId;
      }

      id = R.id.tvParam2Value;
      TextView tvParam2Value = ViewBindings.findChildViewById(rootView, id);
      if (tvParam2Value == null) {
        break missingId;
      }

      id = R.id.tvParam3Label;
      TextView tvParam3Label = ViewBindings.findChildViewById(rootView, id);
      if (tvParam3Label == null) {
        break missingId;
      }

      id = R.id.tvParam3Value;
      TextView tvParam3Value = ViewBindings.findChildViewById(rootView, id);
      if (tvParam3Value == null) {
        break missingId;
      }

      id = R.id.tvRecommendationsContent;
      TextView tvRecommendationsContent = ViewBindings.findChildViewById(rootView, id);
      if (tvRecommendationsContent == null) {
        break missingId;
      }

      id = R.id.tvRecommendationsTitle;
      TextView tvRecommendationsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvRecommendationsTitle == null) {
        break missingId;
      }

      id = R.id.tvStatusDescription;
      TextView tvStatusDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvStatusDescription == null) {
        break missingId;
      }

      id = R.id.tvStatusTitle;
      TextView tvStatusTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvStatusTitle == null) {
        break missingId;
      }

      id = R.id.tvStatusValue;
      TextView tvStatusValue = ViewBindings.findChildViewById(rootView, id);
      if (tvStatusValue == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new FragmentDiagnosticDetailBinding((ConstraintLayout) rootView, btnBack, cardDetails,
          cardRecommendations, cardStatus, contentContainer, headerContainer, ivDiagnosticIcon,
          progressBar, tvDetailsTitle, tvDiagnosticTitle, tvLastUpdated, tvParam1Label,
          tvParam1Value, tvParam2Label, tvParam2Value, tvParam3Label, tvParam3Value,
          tvRecommendationsContent, tvRecommendationsTitle, tvStatusDescription, tvStatusTitle,
          tvStatusValue, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
