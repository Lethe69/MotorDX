// Generated by view binder compiler. Do not edit!
package com.motor.diagnostic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.motor.diagnostic.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddMotorcycleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnAddMotorcycle;

  @NonNull
  public final ImageButton btnAddPhoto;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final CardView cardImage;

  @NonNull
  public final CheckBox cbTerms;

  @NonNull
  public final ConstraintLayout connectContainer;

  @NonNull
  public final TextInputEditText etMake;

  @NonNull
  public final TextInputEditText etModel;

  @NonNull
  public final TextInputEditText etNickname;

  @NonNull
  public final ConstraintLayout headerContainer;

  @NonNull
  public final ImageView ivMotorcycle;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final SwitchCompat switchConnect;

  @NonNull
  public final TextInputLayout tilMake;

  @NonNull
  public final TextInputLayout tilModel;

  @NonNull
  public final TextInputLayout tilNickname;

  @NonNull
  public final TextView tvConnectLabel;

  @NonNull
  public final TextView tvPrompt;

  @NonNull
  public final TextView tvTitle;

  private FragmentAddMotorcycleBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnAddMotorcycle, @NonNull ImageButton btnAddPhoto,
      @NonNull ImageButton btnBack, @NonNull CardView cardImage, @NonNull CheckBox cbTerms,
      @NonNull ConstraintLayout connectContainer, @NonNull TextInputEditText etMake,
      @NonNull TextInputEditText etModel, @NonNull TextInputEditText etNickname,
      @NonNull ConstraintLayout headerContainer, @NonNull ImageView ivMotorcycle,
      @NonNull ProgressBar progressBar, @NonNull SwitchCompat switchConnect,
      @NonNull TextInputLayout tilMake, @NonNull TextInputLayout tilModel,
      @NonNull TextInputLayout tilNickname, @NonNull TextView tvConnectLabel,
      @NonNull TextView tvPrompt, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnAddMotorcycle = btnAddMotorcycle;
    this.btnAddPhoto = btnAddPhoto;
    this.btnBack = btnBack;
    this.cardImage = cardImage;
    this.cbTerms = cbTerms;
    this.connectContainer = connectContainer;
    this.etMake = etMake;
    this.etModel = etModel;
    this.etNickname = etNickname;
    this.headerContainer = headerContainer;
    this.ivMotorcycle = ivMotorcycle;
    this.progressBar = progressBar;
    this.switchConnect = switchConnect;
    this.tilMake = tilMake;
    this.tilModel = tilModel;
    this.tilNickname = tilNickname;
    this.tvConnectLabel = tvConnectLabel;
    this.tvPrompt = tvPrompt;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddMotorcycleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddMotorcycleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_motorcycle, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddMotorcycleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddMotorcycle;
      MaterialButton btnAddMotorcycle = ViewBindings.findChildViewById(rootView, id);
      if (btnAddMotorcycle == null) {
        break missingId;
      }

      id = R.id.btnAddPhoto;
      ImageButton btnAddPhoto = ViewBindings.findChildViewById(rootView, id);
      if (btnAddPhoto == null) {
        break missingId;
      }

      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.cardImage;
      CardView cardImage = ViewBindings.findChildViewById(rootView, id);
      if (cardImage == null) {
        break missingId;
      }

      id = R.id.cbTerms;
      CheckBox cbTerms = ViewBindings.findChildViewById(rootView, id);
      if (cbTerms == null) {
        break missingId;
      }

      id = R.id.connectContainer;
      ConstraintLayout connectContainer = ViewBindings.findChildViewById(rootView, id);
      if (connectContainer == null) {
        break missingId;
      }

      id = R.id.etMake;
      TextInputEditText etMake = ViewBindings.findChildViewById(rootView, id);
      if (etMake == null) {
        break missingId;
      }

      id = R.id.etModel;
      TextInputEditText etModel = ViewBindings.findChildViewById(rootView, id);
      if (etModel == null) {
        break missingId;
      }

      id = R.id.etNickname;
      TextInputEditText etNickname = ViewBindings.findChildViewById(rootView, id);
      if (etNickname == null) {
        break missingId;
      }

      id = R.id.headerContainer;
      ConstraintLayout headerContainer = ViewBindings.findChildViewById(rootView, id);
      if (headerContainer == null) {
        break missingId;
      }

      id = R.id.ivMotorcycle;
      ImageView ivMotorcycle = ViewBindings.findChildViewById(rootView, id);
      if (ivMotorcycle == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.switchConnect;
      SwitchCompat switchConnect = ViewBindings.findChildViewById(rootView, id);
      if (switchConnect == null) {
        break missingId;
      }

      id = R.id.tilMake;
      TextInputLayout tilMake = ViewBindings.findChildViewById(rootView, id);
      if (tilMake == null) {
        break missingId;
      }

      id = R.id.tilModel;
      TextInputLayout tilModel = ViewBindings.findChildViewById(rootView, id);
      if (tilModel == null) {
        break missingId;
      }

      id = R.id.tilNickname;
      TextInputLayout tilNickname = ViewBindings.findChildViewById(rootView, id);
      if (tilNickname == null) {
        break missingId;
      }

      id = R.id.tvConnectLabel;
      TextView tvConnectLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvConnectLabel == null) {
        break missingId;
      }

      id = R.id.tvPrompt;
      TextView tvPrompt = ViewBindings.findChildViewById(rootView, id);
      if (tvPrompt == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new FragmentAddMotorcycleBinding((ConstraintLayout) rootView, btnAddMotorcycle,
          btnAddPhoto, btnBack, cardImage, cbTerms, connectContainer, etMake, etModel, etNickname,
          headerContainer, ivMotorcycle, progressBar, switchConnect, tilMake, tilModel, tilNickname,
          tvConnectLabel, tvPrompt, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
