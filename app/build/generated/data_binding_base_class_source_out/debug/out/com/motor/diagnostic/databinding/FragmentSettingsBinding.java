// Generated by view binder compiler. Do not edit!
package com.motor.diagnostic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.motor.diagnostic.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAbout;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final ConstraintLayout headerContainer;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final SwitchCompat switchDarkTheme;

  @NonNull
  public final SwitchCompat switchDataSync;

  @NonNull
  public final SwitchCompat switchNotifications;

  @NonNull
  public final TextView tvAboutDesc;

  @NonNull
  public final TextView tvAboutTitle;

  @NonNull
  public final TextView tvDarkThemeDesc;

  @NonNull
  public final TextView tvDarkThemeTitle;

  @NonNull
  public final TextView tvDataSyncDesc;

  @NonNull
  public final TextView tvDataSyncTitle;

  @NonNull
  public final TextView tvNotificationsDesc;

  @NonNull
  public final TextView tvNotificationsTitle;

  @NonNull
  public final TextView tvTitle;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAbout,
      @NonNull ImageButton btnBack, @NonNull ConstraintLayout headerContainer,
      @NonNull ProgressBar progressBar, @NonNull SwitchCompat switchDarkTheme,
      @NonNull SwitchCompat switchDataSync, @NonNull SwitchCompat switchNotifications,
      @NonNull TextView tvAboutDesc, @NonNull TextView tvAboutTitle,
      @NonNull TextView tvDarkThemeDesc, @NonNull TextView tvDarkThemeTitle,
      @NonNull TextView tvDataSyncDesc, @NonNull TextView tvDataSyncTitle,
      @NonNull TextView tvNotificationsDesc, @NonNull TextView tvNotificationsTitle,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnAbout = btnAbout;
    this.btnBack = btnBack;
    this.headerContainer = headerContainer;
    this.progressBar = progressBar;
    this.switchDarkTheme = switchDarkTheme;
    this.switchDataSync = switchDataSync;
    this.switchNotifications = switchNotifications;
    this.tvAboutDesc = tvAboutDesc;
    this.tvAboutTitle = tvAboutTitle;
    this.tvDarkThemeDesc = tvDarkThemeDesc;
    this.tvDarkThemeTitle = tvDarkThemeTitle;
    this.tvDataSyncDesc = tvDataSyncDesc;
    this.tvDataSyncTitle = tvDataSyncTitle;
    this.tvNotificationsDesc = tvNotificationsDesc;
    this.tvNotificationsTitle = tvNotificationsTitle;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_about;
      Button btnAbout = ViewBindings.findChildViewById(rootView, id);
      if (btnAbout == null) {
        break missingId;
      }

      id = R.id.btn_back;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.header_container;
      ConstraintLayout headerContainer = ViewBindings.findChildViewById(rootView, id);
      if (headerContainer == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.switch_dark_theme;
      SwitchCompat switchDarkTheme = ViewBindings.findChildViewById(rootView, id);
      if (switchDarkTheme == null) {
        break missingId;
      }

      id = R.id.switch_data_sync;
      SwitchCompat switchDataSync = ViewBindings.findChildViewById(rootView, id);
      if (switchDataSync == null) {
        break missingId;
      }

      id = R.id.switch_notifications;
      SwitchCompat switchNotifications = ViewBindings.findChildViewById(rootView, id);
      if (switchNotifications == null) {
        break missingId;
      }

      id = R.id.tv_about_desc;
      TextView tvAboutDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvAboutDesc == null) {
        break missingId;
      }

      id = R.id.tv_about_title;
      TextView tvAboutTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvAboutTitle == null) {
        break missingId;
      }

      id = R.id.tv_dark_theme_desc;
      TextView tvDarkThemeDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvDarkThemeDesc == null) {
        break missingId;
      }

      id = R.id.tv_dark_theme_title;
      TextView tvDarkThemeTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvDarkThemeTitle == null) {
        break missingId;
      }

      id = R.id.tv_data_sync_desc;
      TextView tvDataSyncDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvDataSyncDesc == null) {
        break missingId;
      }

      id = R.id.tv_data_sync_title;
      TextView tvDataSyncTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvDataSyncTitle == null) {
        break missingId;
      }

      id = R.id.tv_notifications_desc;
      TextView tvNotificationsDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvNotificationsDesc == null) {
        break missingId;
      }

      id = R.id.tv_notifications_title;
      TextView tvNotificationsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvNotificationsTitle == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, btnAbout, btnBack,
          headerContainer, progressBar, switchDarkTheme, switchDataSync, switchNotifications,
          tvAboutDesc, tvAboutTitle, tvDarkThemeDesc, tvDarkThemeTitle, tvDataSyncDesc,
          tvDataSyncTitle, tvNotificationsDesc, tvNotificationsTitle, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
