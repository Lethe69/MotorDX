// Generated by view binder compiler. Do not edit!
package com.motor.diagnostic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.motor.diagnostic.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnAddMotorcycle;

  @NonNull
  public final Button btnChooseMotorcycle;

  @NonNull
  public final ImageView btnNotifications;

  @NonNull
  public final Button btnReviewOtherDiagnostics;

  @NonNull
  public final CardView cardBattery;

  @NonNull
  public final CardView cardEngine;

  @NonNull
  public final CardView cardGauge;

  @NonNull
  public final CardView cardOil;

  @NonNull
  public final CardView cardTemperature;

  @NonNull
  public final LinearLayout diagnosticsContainer;

  @NonNull
  public final View gaugeBackground;

  @NonNull
  public final View gaugeFill;

  @NonNull
  public final ConstraintLayout headerLayout;

  @NonNull
  public final CircleImageView ivUserProfile;

  @NonNull
  public final FrameLayout noDataContainer;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView tvGreeting;

  @NonNull
  public final TextView tvMilLabel;

  @NonNull
  public final TextView tvMilValue;

  @NonNull
  public final TextView tvSpeedLabel;

  @NonNull
  public final TextView tvSpeedValue;

  @NonNull
  public final TextView tvTripLabel;

  @NonNull
  public final TextView tvTripValue;

  @NonNull
  public final TextView tvUpdateLabel;

  @NonNull
  public final TextView tvUpdateTime;

  @NonNull
  public final TextView tvUsername;

  private FragmentDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView btnAddMotorcycle, @NonNull Button btnChooseMotorcycle,
      @NonNull ImageView btnNotifications, @NonNull Button btnReviewOtherDiagnostics,
      @NonNull CardView cardBattery, @NonNull CardView cardEngine, @NonNull CardView cardGauge,
      @NonNull CardView cardOil, @NonNull CardView cardTemperature,
      @NonNull LinearLayout diagnosticsContainer, @NonNull View gaugeBackground,
      @NonNull View gaugeFill, @NonNull ConstraintLayout headerLayout,
      @NonNull CircleImageView ivUserProfile, @NonNull FrameLayout noDataContainer,
      @NonNull ProgressBar progressBar, @NonNull TextView tvGreeting, @NonNull TextView tvMilLabel,
      @NonNull TextView tvMilValue, @NonNull TextView tvSpeedLabel, @NonNull TextView tvSpeedValue,
      @NonNull TextView tvTripLabel, @NonNull TextView tvTripValue, @NonNull TextView tvUpdateLabel,
      @NonNull TextView tvUpdateTime, @NonNull TextView tvUsername) {
    this.rootView = rootView;
    this.btnAddMotorcycle = btnAddMotorcycle;
    this.btnChooseMotorcycle = btnChooseMotorcycle;
    this.btnNotifications = btnNotifications;
    this.btnReviewOtherDiagnostics = btnReviewOtherDiagnostics;
    this.cardBattery = cardBattery;
    this.cardEngine = cardEngine;
    this.cardGauge = cardGauge;
    this.cardOil = cardOil;
    this.cardTemperature = cardTemperature;
    this.diagnosticsContainer = diagnosticsContainer;
    this.gaugeBackground = gaugeBackground;
    this.gaugeFill = gaugeFill;
    this.headerLayout = headerLayout;
    this.ivUserProfile = ivUserProfile;
    this.noDataContainer = noDataContainer;
    this.progressBar = progressBar;
    this.tvGreeting = tvGreeting;
    this.tvMilLabel = tvMilLabel;
    this.tvMilValue = tvMilValue;
    this.tvSpeedLabel = tvSpeedLabel;
    this.tvSpeedValue = tvSpeedValue;
    this.tvTripLabel = tvTripLabel;
    this.tvTripValue = tvTripValue;
    this.tvUpdateLabel = tvUpdateLabel;
    this.tvUpdateTime = tvUpdateTime;
    this.tvUsername = tvUsername;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddMotorcycle;
      ImageView btnAddMotorcycle = ViewBindings.findChildViewById(rootView, id);
      if (btnAddMotorcycle == null) {
        break missingId;
      }

      id = R.id.btnChooseMotorcycle;
      Button btnChooseMotorcycle = ViewBindings.findChildViewById(rootView, id);
      if (btnChooseMotorcycle == null) {
        break missingId;
      }

      id = R.id.btnNotifications;
      ImageView btnNotifications = ViewBindings.findChildViewById(rootView, id);
      if (btnNotifications == null) {
        break missingId;
      }

      id = R.id.btnReviewOtherDiagnostics;
      Button btnReviewOtherDiagnostics = ViewBindings.findChildViewById(rootView, id);
      if (btnReviewOtherDiagnostics == null) {
        break missingId;
      }

      id = R.id.cardBattery;
      CardView cardBattery = ViewBindings.findChildViewById(rootView, id);
      if (cardBattery == null) {
        break missingId;
      }

      id = R.id.cardEngine;
      CardView cardEngine = ViewBindings.findChildViewById(rootView, id);
      if (cardEngine == null) {
        break missingId;
      }

      id = R.id.cardGauge;
      CardView cardGauge = ViewBindings.findChildViewById(rootView, id);
      if (cardGauge == null) {
        break missingId;
      }

      id = R.id.cardOil;
      CardView cardOil = ViewBindings.findChildViewById(rootView, id);
      if (cardOil == null) {
        break missingId;
      }

      id = R.id.cardTemperature;
      CardView cardTemperature = ViewBindings.findChildViewById(rootView, id);
      if (cardTemperature == null) {
        break missingId;
      }

      id = R.id.diagnosticsContainer;
      LinearLayout diagnosticsContainer = ViewBindings.findChildViewById(rootView, id);
      if (diagnosticsContainer == null) {
        break missingId;
      }

      id = R.id.gaugeBackground;
      View gaugeBackground = ViewBindings.findChildViewById(rootView, id);
      if (gaugeBackground == null) {
        break missingId;
      }

      id = R.id.gaugeFill;
      View gaugeFill = ViewBindings.findChildViewById(rootView, id);
      if (gaugeFill == null) {
        break missingId;
      }

      id = R.id.headerLayout;
      ConstraintLayout headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.ivUserProfile;
      CircleImageView ivUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (ivUserProfile == null) {
        break missingId;
      }

      id = R.id.noDataContainer;
      FrameLayout noDataContainer = ViewBindings.findChildViewById(rootView, id);
      if (noDataContainer == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tvGreeting;
      TextView tvGreeting = ViewBindings.findChildViewById(rootView, id);
      if (tvGreeting == null) {
        break missingId;
      }

      id = R.id.tvMilLabel;
      TextView tvMilLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvMilLabel == null) {
        break missingId;
      }

      id = R.id.tvMilValue;
      TextView tvMilValue = ViewBindings.findChildViewById(rootView, id);
      if (tvMilValue == null) {
        break missingId;
      }

      id = R.id.tvSpeedLabel;
      TextView tvSpeedLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvSpeedLabel == null) {
        break missingId;
      }

      id = R.id.tvSpeedValue;
      TextView tvSpeedValue = ViewBindings.findChildViewById(rootView, id);
      if (tvSpeedValue == null) {
        break missingId;
      }

      id = R.id.tvTripLabel;
      TextView tvTripLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvTripLabel == null) {
        break missingId;
      }

      id = R.id.tvTripValue;
      TextView tvTripValue = ViewBindings.findChildViewById(rootView, id);
      if (tvTripValue == null) {
        break missingId;
      }

      id = R.id.tvUpdateLabel;
      TextView tvUpdateLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvUpdateLabel == null) {
        break missingId;
      }

      id = R.id.tvUpdateTime;
      TextView tvUpdateTime = ViewBindings.findChildViewById(rootView, id);
      if (tvUpdateTime == null) {
        break missingId;
      }

      id = R.id.tvUsername;
      TextView tvUsername = ViewBindings.findChildViewById(rootView, id);
      if (tvUsername == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((ConstraintLayout) rootView, btnAddMotorcycle,
          btnChooseMotorcycle, btnNotifications, btnReviewOtherDiagnostics, cardBattery, cardEngine,
          cardGauge, cardOil, cardTemperature, diagnosticsContainer, gaugeBackground, gaugeFill,
          headerLayout, ivUserProfile, noDataContainer, progressBar, tvGreeting, tvMilLabel,
          tvMilValue, tvSpeedLabel, tvSpeedValue, tvTripLabel, tvTripValue, tvUpdateLabel,
          tvUpdateTime, tvUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
